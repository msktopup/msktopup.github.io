{"version":3,"sources":["components/url.jsx","components/header.jsx","components/card.jsx","components/games.jsx","components/home.jsx","components/authentication/session.js","components/register.jsx","components/packages.jsx","components/login.jsx","components/authentication/logout.jsx","components/user/orderhistory.jsx","components/user/changePassword.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Header","loggedIn","Jumbotron","className","Navbar","bg","text","navbar","expand","Container","Brand","href","Toggle","aria-controls","Collapse","id","Nav","to","Link","NavDropdown","title","Item","Card","name","_id","style","width","games","setGames","console","log","map","value","index","key","getHeader","header","localStorage","getItem","theHeader","Headers","k","append","setHeader","setItem","setUser","setLoggedIn","useState","username","setUsername","fullName","setfullName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","phone","setPhone","buttonClicked","setButtonClicked","error","setError","body","a","url","API_URL","reqbody","FormData","JSON","stringify","fetch","headers","method","response","json","resbody","err","useEffect","signup","marginTop","class","for","type","required","onChange","e","target","onClick","preventDefault","match","game","forEach","params","packages","setPackages","playerId","setPlayerId","emailOrNumber","setEmailOrNumber","bkashNumber","setBkashNumber","accountPlatform","setAccountPlatform","selectedPackage","setSelectedPackage","ordered","setOrdered","noPackages","setNoPackages","serverResponse","length","getPackages","package","order","action","placeholder","getAttribute","price","clear","OrderHistory","orders","setOrders","active","Number","page","items","number","push","Pagination","getOrderHistory","scope","values","status","ChangePassword","oldPassword","setOldPassword","newPassword","changePass","isLoggedIn","App","getGames","path","exact","component","props","isExact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.84c3b4a3.chunk.js","sourcesContent":["export default \"https://ingame-item-topup-api.herokuapp.com/api\";\n//export default \"http://localhost:80/api\";\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Jumbotron,\n  Navbar,\n  Nav,\n  NavDropdown,\n  Container,\n} from \"react-bootstrap\";\n\nexport default function Header({ loggedIn }) {\n  return (\n    <>\n      <Jumbotron className=\"text-center bg-dark jumbotron-fluid mb-0 \">\n        <div className=\"container\">\n          <h1 className=\"text-white\">Free Fire Diamond Topup</h1>\n          <p className=\"text-white\">\n            Resize this responsive page to see the effect!\n          </p>\n        </div>\n      </Jumbotron>\n      <Navbar\n        bg=\"dark\"\n        text=\"white\"\n        navbar=\"dark\"\n        expand=\"lg\"\n        className=\"navbar-dark\"\n      >\n        <Container>\n          <Navbar.Brand href=\"/\">Msk Topup</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Link to=\"/\">\n                <Nav.Link href=\"/\">Home</Nav.Link>\n              </Link>\n              {!loggedIn || (\n                <>\n                  <Link to=\"/orderhistory\">\n                    <Nav.Link href=\"/orderhistory\">Order History </Nav.Link>\n                  </Link>\n                  <Link to=\"/changepassword\">\n                    <Nav.Link href=\"/changepassword\">Change Password</Nav.Link>{\" \"}\n                  </Link>\n                  <Link to=\"/logout\">\n                    <Nav.Link href=\"/Logout\">Logout</Nav.Link>\n                  </Link>\n                </>\n              )}\n\n              {loggedIn || (\n                <NavDropdown\n                  title=\"User\"\n                  bg=\"dark\"\n                  id=\"basic-nav-dropdown\"\n                  className=\"bg-dark\"\n                  //style={{ color: \"#fff !important\" }}\n                >\n                  <NavDropdown.Item bg=\"dark\" href=\"/register\">\n                    <Link to=\"/register\">Register </Link>\n                  </NavDropdown.Item>\n                  <Link to=\"/login\">\n                    <NavDropdown.Item href=\"/login\">Login</NavDropdown.Item>\n                  </Link>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Card({ name, _id }) {\n  return (\n    <div className=\"card\" style={{ width: \"250px\" }}>\n      <div className=\"card-body\">\n        <h4 className=\"card-title\">{name}</h4>\n        <Link to={\"/game/\" + _id} className=\"btn btn-primary\">\n          See Packages\n        </Link>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"./card\";\n\n//const API_URL = \"http://localhost:80/api\";\nimport API_URL from \"./url\";\n\nexport default function ({ games, setGames }) {\n  if (games) {\n    console.log(\"games are\", games);\n    return (\n      <div className=\"container card-columns\">\n        {games.map((value, index) => (\n          <Card key={value._id} _id={value._id} name={value.name}></Card>\n        ))}\n      </div>\n    );\n  } else {\n    return <h1>loading</h1>;\n  }\n}\n","import React from \"react\";\nimport Games from \"./games\";\n\nexport default function ({ games, setGames }) {\n  return (\n    <>\n      <Games games={games} setGames={setGames}></Games>\n    </>\n  );\n}\n","export function getHeader() {\n  let header = {};\n  header.id = localStorage.getItem(\"id\");\n  header.key = localStorage.getItem(\"key\");\n  if (!header.id || !header.key) {\n    return;\n  }\n  let theHeader = new Headers();\n\n  for (var k in header) {\n    theHeader.append(k, header[k]);\n  }\n\n  theHeader.append(\"Content-Type\", \"application/json\");\n\n  return theHeader;\n}\n\nexport function setHeader(header) {\n  localStorage.setItem(\"id\", header.id);\n  localStorage.setItem(\"key\", header.key);\n}\n\nexport function deleteHeader() {\n  localStorage.clear();\n  return;\n}\n","import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { setHeader } from \"./authentication/session\";\nimport API_URL from \"./url\";\n\nexport default function ({ setUser, setLoggedIn, loggedIn }) {\n  const [username, setUsername] = useState(\"\");\n  const [fullName, setfullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n\n  const [buttonClicked, setButtonClicked] = useState(false);\n\n  const [error, setError] = useState(\"\");\n\n  //const [user, setUser] = useState(\"\");\n\n  useEffect(() => {\n    if (buttonClicked) {\n      console.log(\"buttonis clicked\");\n      let body = {};\n      body.username = username;\n      body.email = email;\n      body.password = password;\n      body.phone = phone;\n      body.fullName = fullName;\n\n      signup(body);\n    }\n  }, [buttonClicked]);\n\n  async function signup(body) {\n    let url = `${API_URL}/auth/register`;\n\n    let reqbody = new FormData();\n\n    for (var k in body) {\n      reqbody.append(k, body[k]);\n    }\n\n    console.log(\"the fucking body is: \", JSON.stringify(body));\n    const response = await fetch(url, {\n      // headers: headers,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      //mode: \"no-cors\",\n      method: \"POST\",\n      body: JSON.stringify(body),\n    });\n\n    console.log(\"server responded:\", response);\n\n    let resbody = await response.json();\n\n    if (resbody.err) {\n      setError(resbody.err);\n      setButtonClicked(false);\n    } else {\n      setLoggedIn(true);\n      setHeader(resbody);\n    }\n  }\n  if (loggedIn) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    //{loggedIn}\n    //{loggedIn || <Redirect to=\"/\" />}\n    <form\n      className=\"container mt-50\"\n      style={{\n        marginTop: \"50px\",\n      }}\n    >\n      {error === \"\" || (\n        <div class=\"alert alert-danger\">\n          <strong>Error!</strong> {error}\n        </div>\n      )}\n      <div class=\"form-group\">\n        <label for=\"usr\">Username:</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"usr\"\n          required\n          value={username}\n          onChange={(e) => {\n            setUsername(e.target.value);\n          }}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label for=\"usr\">Full Name:</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"usr\"\n          required\n          value={fullName}\n          onChange={(e) => {\n            setfullName(e.target.value);\n          }}\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"usr\">Email:</label>\n        <input\n          type=\"email\"\n          class=\"form-control\"\n          id=\"usr\"\n          required\n          value={email}\n          onChange={(e) => {\n            setEmail(e.target.value);\n          }}\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"usr\">Phone Number:</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"usr\"\n          required\n          value={phone}\n          onChange={(e) => {\n            setPhone(e.target.value);\n          }}\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"pwd\">Password:</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          id=\"pwd\"\n          required\n          value={password}\n          onChange={(e) => {\n            setPassword(e.target.value);\n          }}\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"pwd\">Confirm Password:</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          id=\"pwd\"\n          required\n          value={confirmPassword}\n          onChange={(e) => {\n            setConfirmPassword(e.target.value);\n          }}\n        />\n      </div>\n      <div>\n        <input\n          type=\"submit\"\n          value=\"Sign UP\"\n          class=\"btn btn-primary\"\n          onClick={(e) => {\n            e.preventDefault();\n            setButtonClicked(true);\n          }}\n        />\n      </div>\n    </form>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { getHeader } from \"./authentication/session\";\n\n//import Card from \"./card\";\n\nimport API_URL from \"./url\";\n\nexport default function ({ match, loggedIn, games }) {\n  let game = {};\n  games.forEach((value) => {\n    if (value._id === match.params.id) {\n      game = value;\n    }\n  });\n\n  const [packages, setPackages] = useState([]);\n\n  //hooks for input fields\n  const [playerId, setPlayerId] = useState(\"\");\n  const [emailOrNumber, setEmailOrNumber] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [bkashNumber, setBkashNumber] = useState(\"\");\n  const [accountPlatform, setAccountPlatform] = useState(\"Facebook\");\n  const [selectedPackage, setSelectedPackage] = useState(\"\");\n\n  const [buttonClicked, setButtonClicked] = useState(false);\n  const [ordered, setOrdered] = useState(false);\n  const [noPackages, setNoPackages] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    console.log(\"effect has run\");\n    getPackages();\n  }, []);\n\n  useEffect(() => {\n    if (buttonClicked) {\n      const body = {};\n      if (game.type !== \"promo\") {\n        body.accountPlatform = accountPlatform;\n        body.emailOrNumber = emailOrNumber;\n        body.password = password;\n      }\n\n      if (game.type === \"promo\") {\n        body.playerId = playerId;\n      }\n\n      body.bkashNumber = bkashNumber;\n      body.package = selectedPackage;\n\n      order(body);\n    }\n  }, [buttonClicked]);\n\n  async function order(body) {\n    if (!loggedIn) {\n      return;\n    }\n    try {\n      let url = `${API_URL}/order/place`;\n      let reqbody = new FormData();\n\n      for (var k in body) {\n        reqbody.append(k, body[k]);\n      }\n\n      const response = await fetch(url, {\n        headers: getHeader(),\n        method: \"POST\",\n        body: JSON.stringify(body),\n      });\n\n      let resbody = await response.json();\n\n      if (resbody.err) {\n        setError(resbody.err);\n        setButtonClicked(false);\n        return;\n      }\n      setOrdered(true);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function getPackages() {\n    try {\n      let url = `${API_URL}/get/packages?game=${match.params.id}`;\n      let serverResponse = await fetch(url, { method: \"GET\" });\n      let body = await serverResponse.json();\n      if (body.length === 0) {\n        setNoPackages(true);\n      }\n      setPackages(body);\n      return;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  if (noPackages) {\n    return <h1>This page is not available yet</h1>;\n  }\n\n  if (buttonClicked) {\n    if (!loggedIn) {\n      return <Redirect to=\"/login\" />;\n    }\n    if (ordered) {\n      if (error === \"\") {\n        return <Redirect to=\"/orderhistory\" />;\n      }\n      setOrdered(false);\n      setButtonClicked(false);\n    }\n  }\n  if (packages.length === 0) {\n    return <h1>Loading</h1>;\n  }\n  if (packages) {\n    return (\n      <>\n        <div className=\"container\"></div>\n        <div className=\"container \">\n          <div className=\"row\" style={{ marginTop: \"15px\" }}>\n            <div className=\"col-sm-4\">\n              <p>\n                Warning – READ THE DESCRIPTION BEFORE ORDER – ভুল\n                নাম্বার/পাসওয়ার্ড দিয়ে অথবা একাউন্ট এ ২ স্টেপ দিয়ে রাখলে আপনার\n                অর্ডার কমপ্লিট হতে লেইট হবে ! যারা অন্যদের টপআপ/এয়ারড্রপ কিনে\n                দিচ্ছেন তারা অর্ডার করার আগে নিজে লগ ইন করে চ্যাক করুন। নতুবা\n                অনুগ্রহ করে অর্ডার করবেন না। এয়ারড্রপ এর সময় মিনিমাম ১ ঘন্টা\n                থাকতে হবে।\n              </p>\n            </div>\n            <div className=\"col\">\n              {error === \"\" || (\n                <div class=\"alert alert-danger\">\n                  <strong>Error!</strong> {error}\n                </div>\n              )}\n\n              <form action=\"/action_page.php\" className=\"\">\n                {game.type === \"promo\" ? (\n                  <div class=\"form-group\">\n                    <label for=\"email\">Player Id:</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      placeholder=\"Enter Player Id\"\n                      id=\"email\"\n                      value={playerId}\n                      onChange={(e) => setPlayerId(e.target.value)}\n                    />\n                  </div>\n                ) : (\n                  <>\n                    <div className=\"form-group\">\n                      <label for=\"sel1\">Account Type:</label>\n                      <select\n                        class=\"form-control\"\n                        id=\"sel1\"\n                        onChange={(e) => {\n                          setAccountPlatform(e.target.value);\n                        }}\n                      >\n                        <option>Facebook</option>\n                        <option>Gmail</option>\n                      </select>\n                    </div>\n                    <div class=\"form-group\">\n                      <label for=\"email\">Email or Phone:</label>\n                      <input\n                        type=\"text\"\n                        class=\"form-control\"\n                        placeholder=\"Enter email\"\n                        id=\"email\"\n                        value={emailOrNumber}\n                        onChange={(e) => setEmailOrNumber(e.target.value)}\n                      />\n                    </div>\n                    <div class=\"form-group\">\n                      <label for=\"pwd\">Password:</label>\n                      <input\n                        type=\"password\"\n                        class=\"form-control\"\n                        placeholder=\"Enter password\"\n                        id=\"pwd\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                      />\n                    </div>\n                  </>\n                )}\n                <div className=\"row\">\n                  {packages.map((value) => (\n                    <>\n                      <div className=\"col\">\n                        <div class=\"custom-radio custom-control\">\n                          <input\n                            className=\"custom-control-input\"\n                            type=\"radio\"\n                            name=\"optradio\"\n                            id={value._id}\n                            selectedPackage={value._id}\n                            onChange={(e) => {\n                              setSelectedPackage(\n                                e.target.getAttribute(\"selectedPackage\")\n                              );\n                            }}\n                          />\n                          <label class=\"custom-control-label\" for={value._id}>\n                            {value.name} for BDT {value.price}\n                          </label>\n                        </div>\n                      </div>\n                    </>\n                  ))}\n                </div>\n                <br />\n                <div class=\"form-group\">\n                  <label for=\"email\">Bkash Number:</label>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    placeholder=\"Enter Number\"\n                    id=\"email\"\n                    value={bkashNumber}\n                    onChange={(e) => setBkashNumber(e.target.value)}\n                  />\n                </div>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-primary\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    setButtonClicked(true);\n                  }}\n                >\n                  Next\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  } else {\n    return <h1>loading</h1>;\n  }\n}\n","import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { setHeader } from \"./authentication/session\";\nimport API_URL from \"./url\";\n\nexport default function ({ setUser, setLoggedIn, loggedIn }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [buttonClicked, setButtonClicked] = useState(false);\n\n  const [error, setError] = useState(\"\");\n\n  //const [user, setUser] = useState(\"\");\n\n  useEffect(() => {\n    if (buttonClicked) {\n      console.log(\"buttonis clicked\");\n      let body = {};\n      body.username = username;\n      body.password = password;\n\n      signup(body);\n    }\n  }, [buttonClicked]);\n\n  async function signup(body) {\n    let url = `${API_URL}/auth/login`;\n\n    let reqbody = new FormData();\n\n    for (var k in body) {\n      reqbody.append(k, body[k]);\n    }\n\n    const response = await fetch(url, {\n      // headers: headers,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      //mode: \"no-cors\",\n      method: \"POST\",\n      body: JSON.stringify(body),\n    });\n\n    console.log(\"the header is :\", response.headers);\n    let resbody = await response.json();\n\n    setHeader(resbody);\n\n    if (resbody.err) {\n      setError(resbody.err);\n      setButtonClicked(false);\n    } else {\n      setLoggedIn(true);\n    }\n  }\n  if (loggedIn) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    //{loggedIn}\n    //{loggedIn || <Redirect to=\"/\" />}\n    <form\n      className=\"container mt-50\"\n      style={{\n        marginTop: \"50px\",\n      }}\n    >\n      {error === \"\" || (\n        <div class=\"alert alert-danger\">\n          <strong>Error!</strong> {error}\n        </div>\n      )}\n      <div class=\"form-group\">\n        <label for=\"usr\">Username:</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"usr\"\n          required\n          value={username}\n          onChange={(e) => {\n            setUsername(e.target.value);\n          }}\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"pwd\">Password:</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          id=\"pwd\"\n          required\n          value={password}\n          onChange={(e) => {\n            setPassword(e.target.value);\n          }}\n        />\n      </div>\n      <div>\n        <input\n          type=\"submit\"\n          value=\"Login\"\n          class=\"btn btn-primary\"\n          onClick={(e) => {\n            e.preventDefault();\n            setButtonClicked(true);\n          }}\n        />\n      </div>\n      <br />\n      <p>Dont Have an account?</p>\n      <div>\n        <Link to=\"/register\" className=\"btn btn-primary\">\n          Register\n        </Link>\n      </div>\n    </form>\n  );\n}\n","import React from \"react\";\nimport { deleteHeader, getHeader } from \"./session\";\nimport { Redirect } from \"react-router-dom\";\nimport API_URL from \"../url\";\n\nexport default function ({ setLoggedIn }) {\n  deleteHeader();\n  let url = `${API_URL}/auth/logout`;\n  fetch(url, {\n    headers: getHeader(),\n    type: \"GET\",\n  });\n  setLoggedIn(false);\n  return <Redirect to=\"/\" />;\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport API_URL from \"../url\";\nimport { getHeader } from \"../authentication/session\";\n\nexport default function OrderHistory({ match }) {\n  const [orders, setOrders] = useState([]);\n\n  let active = Number(match.params.page);\n  let items = [];\n  for (let number = 1; number <= 5; number++) {\n    items.push(\n      <Pagination.Item\n        href={\"/orderhistory/\" + number}\n        key={number}\n        active={number === active}\n      >\n        {number}\n      </Pagination.Item>\n    );\n  }\n\n  useEffect(() => {\n    getOrderHistory(active);\n  }, []);\n\n  useEffect(() => {\n    console.log(\"the orders are :\", orders);\n  }, [orders]);\n\n  async function getOrderHistory(active) {\n    try {\n      let url = `${API_URL}/user/getorderhistory?page=${active}&&limit=10`;\n      let response = await fetch(url, {\n        headers: getHeader(),\n      });\n      setOrders(await response.json());\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  if (orders.length === 0) {\n    return <p>Loading</p>;\n  }\n\n  return (\n    <>\n      <div className=\"container\">\n        <div class=\"table-responsive\">\n          <table class=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Item</th>\n                <th scope=\"col\">Ammount</th>\n                <th scope=\"col\">Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.values.map((value) => (\n                <>\n                  <tr>\n                    <th scope=\"row\">{value._id}</th>\n                    <td>{value.package ? value.package.name : \"Deleted\"}</td>\n                    <td>{value.package ? value.package.price : \"Deleted\"}</td>\n                    <td>{value.status}</td>\n                  </tr>\n                </>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div className=\"container\">\n        <div>\n          <Pagination>{items}</Pagination>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { getHeader } from \"../authentication/session\";\nimport API_URL from \"../url\";\n\nexport default function ChangePassword() {\n  const [oldPassword, setOldPassword] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [buttonClicked, setButtonClicked] = useState(false);\n\n  const [error, setError] = useState(\"\");\n\n  //const [user, setUser] = useState(\"\");\n\n  useEffect(() => {\n    if (buttonClicked) {\n      console.log(\"buttonis clicked\");\n      let body = {};\n      body.oldPassword = oldPassword;\n      body.newPassword = password;\n\n      changePass(body);\n    }\n  }, [buttonClicked]);\n\n  async function changePass(body) {\n    let url = `${API_URL}/auth/changepassword`;\n\n    const response = await fetch(url, {\n      // headers: headers,\n      headers: getHeader(), //mode: \"no-cors\",\n      method: \"PATCH\",\n      body: JSON.stringify(body),\n    });\n\n    console.log(\"the header is :\", response.headers);\n    let resbody = await response.json();\n    console.log(\"the effing resbody is\", resbody);\n\n    if (resbody.err) {\n      setError(resbody.err);\n      setButtonClicked(false);\n    } else {\n      localStorage.clear();\n      return;\n    }\n  }\n\n  return (\n    //{loggedIn}\n    //{loggedIn || <Redirect to=\"/\" />}\n    <form\n      className=\"container mt-50\"\n      style={{\n        marginTop: \"50px\",\n      }}\n    >\n      {error === \"\" || (\n        <div class=\"alert alert-danger\">\n          <strong>Error!</strong> {error}\n        </div>\n      )}\n      <div class=\"form-group\">\n        <label for=\"usr\">Old Password:</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          id=\"usr\"\n          required\n          value={oldPassword}\n          onChange={(e) => {\n            setOldPassword(e.target.value);\n          }}\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"pwd\">New Password:</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          id=\"pwd\"\n          required\n          value={password}\n          onChange={(e) => {\n            setPassword(e.target.value);\n          }}\n        />\n      </div>\n      <div>\n        <input\n          type=\"submit\"\n          value=\"Apply\"\n          class=\"btn btn-primary\"\n          onClick={(e) => {\n            e.preventDefault();\n            setButtonClicked(true);\n          }}\n        />\n      </div>\n    </form>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport MessengerCustomerChat from \"react-messenger-customer-chat\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport API_URL from \"./components/url\";\n// import '../public/MoonStore_files/bootstrap.min.css';\n// import OwlCarousel from 'react-owl-carousel';\nimport \"owl.carousel/dist/assets/owl.carousel.css\";\nimport \"owl.carousel/dist/assets/owl.theme.default.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./components/style.css\";\n// import \"bootstrap/dist/js/bootstrap.min.js\";\n\n//importing components\nimport Header from \"./components/header\";\n// import Nav from './components/navbar'\n// import MainBanner from './components/mainbanner'\nimport Home from \"./components/home\";\nimport Register from \"./components/register\";\nimport Packages from \"./components/packages\";\nimport Login from \"./components/login\";\nimport { getHeader } from \"./components/authentication/session\";\nimport Logout from \"./components/authentication/logout\";\nimport OrderHistory from \"./components/user/orderhistory\";\nimport ChangePassword from \"./components/user/changePassword\";\n\nlet isLoggedIn = false;\n\nif (getHeader()) {\n  isLoggedIn = true;\n}\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(isLoggedIn);\n  const [user, setUser] = useState({});\n  const [games, setGames] = useState([]);\n  useEffect(() => {\n    getGames();\n  }, []);\n  async function getGames() {\n    try {\n      let url = `${API_URL}/get/games`;\n      let serverResponse = await fetch(url, { method: \"GET\" });\n      setGames(await serverResponse.json());\n      return;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <>\n      <Router>\n        <Header loggedIn={loggedIn}></Header>\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            component={(props) => (\n              <Home {...props} games={games} setGames={setGames} />\n            )}\n          />\n          <Route\n            path=\"/register\"\n            component={() => (\n              <Register\n                setLoggedIn={setLoggedIn}\n                loggedIn={loggedIn}\n                setUser={setUser}\n              ></Register>\n            )}\n          />\n          <Route\n            path=\"/login\"\n            component={() => (\n              <Login\n                setLoggedIn={setLoggedIn}\n                loggedIn={loggedIn}\n                setUser={setUser}\n              ></Login>\n            )}\n          />\n          <Route\n            path=\"/game/:id\"\n            component={(props) => (\n              <Packages {...props} loggedIn={loggedIn} games={games} />\n            )}\n          />\n          <Route\n            path=\"/logout\"\n            component={() => <Logout setLoggedIn={setLoggedIn} />}\n          />\n          <Route\n            path=\"/orderhistory\"\n            exact\n            component={(props) => <Redirect to=\"/orderhistory/1\" />}\n          />\n          <Route\n            path=\"/orderhistory/:page\"\n            isExact={false}\n            component={(props) => (\n              <OrderHistory {...props} setLoggedIn={setLoggedIn} />\n            )}\n          />\n          <Route path=\"/changepassword\" component={ChangePassword} />\n        </Switch>\n      </Router>\n      <MessengerCustomerChat />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}